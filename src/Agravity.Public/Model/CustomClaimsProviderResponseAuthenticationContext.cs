/*
 * Agravity OpenAPI Documentation - Public Functions
 *
 * <h1>Agravity API Reference</h1>This is the public API description of Agravity GmbH.<br/><h2>Resources</h2><ul> <li>Collection type management</li> <li>Collections management</li> <li>Assets management</li> <li>Assets operations</li> <li>Assets publishing</li> <li>Collection Sharing (consume share)</li> <li>Secure Upload (validate + upload file)</li> <li>Download ZIP</li> <li>Search</li> <li>General management</li></ul><h2> Operations</h2>Agravity API performs the following operations:<ul> <li>List / get single collection types</li> <li>List / get single collections</li> <li>List / get single  assets</li> <li>Operations on assets like: blobs, rotate, resize, similar, collections, customfields, download</li> <li>List / get single published asset</li> <li>Search for assets or collections</li> <li>Get version of deployment</li></ul><br/><b>API key is needed to access these endpoints.</b><br/><br/>Copyright Â© Agravity GmbH 2024. All Rights Reserved
 *
 * The version of the OpenAPI document: 8.3.0
 * Contact: office@agravity.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Agravity.Public.Client.OpenAPIDateConverter;

namespace Agravity.Public.Model
{
    /// <summary>
    /// CustomClaimsProviderResponseAuthenticationContext
    /// </summary>
    [DataContract(Name = "customClaimsProviderResponseAuthenticationContext")]
    public partial class CustomClaimsProviderResponseAuthenticationContext : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomClaimsProviderResponseAuthenticationContext" /> class.
        /// </summary>
        /// <param name="user">user.</param>
        /// <param name="correlationId">correlationId.</param>
        /// <param name="varClient">varClient.</param>
        /// <param name="protocol">protocol.</param>
        /// <param name="clientServicePrincipal">clientServicePrincipal.</param>
        /// <param name="resourceServicePrincipal">resourceServicePrincipal.</param>
        public CustomClaimsProviderResponseAuthenticationContext(CustomClaimsProviderResponseUser user = default(CustomClaimsProviderResponseUser), string correlationId = default(string), CustomClaimsProviderResponseClient varClient = default(CustomClaimsProviderResponseClient), string protocol = default(string), CustomClaimsProviderResponseServicePrincipal clientServicePrincipal = default(CustomClaimsProviderResponseServicePrincipal), CustomClaimsProviderResponseServicePrincipal resourceServicePrincipal = default(CustomClaimsProviderResponseServicePrincipal))
        {
            this.User = user;
            this.CorrelationId = correlationId;
            this.VarClient = varClient;
            this.Protocol = protocol;
            this.ClientServicePrincipal = clientServicePrincipal;
            this.ResourceServicePrincipal = resourceServicePrincipal;
        }

        /// <summary>
        /// Gets or Sets User
        /// </summary>
        [DataMember(Name = "user", EmitDefaultValue = false)]
        public CustomClaimsProviderResponseUser User { get; set; }

        /// <summary>
        /// Gets or Sets CorrelationId
        /// </summary>
        [DataMember(Name = "correlationId", EmitDefaultValue = false)]
        public string CorrelationId { get; set; }

        /// <summary>
        /// Gets or Sets VarClient
        /// </summary>
        [DataMember(Name = "client", EmitDefaultValue = false)]
        public CustomClaimsProviderResponseClient VarClient { get; set; }

        /// <summary>
        /// Gets or Sets Protocol
        /// </summary>
        [DataMember(Name = "protocol", EmitDefaultValue = false)]
        public string Protocol { get; set; }

        /// <summary>
        /// Gets or Sets ClientServicePrincipal
        /// </summary>
        [DataMember(Name = "clientServicePrincipal", EmitDefaultValue = false)]
        public CustomClaimsProviderResponseServicePrincipal ClientServicePrincipal { get; set; }

        /// <summary>
        /// Gets or Sets ResourceServicePrincipal
        /// </summary>
        [DataMember(Name = "resourceServicePrincipal", EmitDefaultValue = false)]
        public CustomClaimsProviderResponseServicePrincipal ResourceServicePrincipal { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CustomClaimsProviderResponseAuthenticationContext {\n");
            sb.Append("  User: ").Append(User).Append("\n");
            sb.Append("  CorrelationId: ").Append(CorrelationId).Append("\n");
            sb.Append("  VarClient: ").Append(VarClient).Append("\n");
            sb.Append("  Protocol: ").Append(Protocol).Append("\n");
            sb.Append("  ClientServicePrincipal: ").Append(ClientServicePrincipal).Append("\n");
            sb.Append("  ResourceServicePrincipal: ").Append(ResourceServicePrincipal).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
